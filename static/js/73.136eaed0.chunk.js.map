{"version":3,"file":"static/js/73.136eaed0.chunk.js","mappings":"wKAGA,MAeA,EAfmBA,IAAiB,IAAhB,OAAEC,GAAQD,EAC5B,OACEE,EAAAA,EAAAA,KAAA,QAAMC,UAAU,YAAWC,SACxBH,EAAOI,aAAaC,KAAI,CAACC,EAASC,KACjC,MAAMC,GAAkBC,EAAAA,EAAAA,GAAmBH,EAAQI,MACnD,OAAOF,GACLP,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAACO,EAAe,CAACF,QAASA,KADlBC,GAGR,IAAI,KAEL,C,2DCZX,MCGMI,EAAiB,CACrBC,MDJkBb,IAAkB,IAAjB,QAAEO,GAASP,EAC9B,OACEc,EAAAA,EAAAA,MAAA,OAAAV,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOa,QAASR,EAAQS,GAAIb,UAAU,iCAAgCC,SACnEG,EAAQU,SAEXf,EAAAA,EAAAA,KAAA,SACES,KAAMJ,EAAQW,WAAa,OAC3BF,GAAIT,EAAQS,GACZG,KAAMZ,EAAQY,KACdC,MAAM,qIAEJ,ECPRC,MCLkBrB,IAAkB,IAAjB,QAAEO,GAASP,EAC9B,OACEE,EAAAA,EAAAA,KAAA,OAAAE,UACEU,EAAAA,EAAAA,MAAA,YAAAV,SAAA,EACEF,EAAAA,EAAAA,KAAA,UAAQC,UAAU,0CAAyCC,SAAEG,EAAQU,QACpEV,EAAQe,QAAQhB,KAAI,CAACiB,EAAQC,KAC5BV,EAAAA,EAAAA,MAAA,OAAeX,UAAU,oBAAmBC,SAAA,EAC1CF,EAAAA,EAAAA,KAAA,SACEc,GAAI,GAAGT,EAAQS,MAAMQ,IACrBL,KAAMZ,EAAQY,KACdR,KAAK,QACLc,MAAOF,EAAOE,MACdtB,UAAU,mEAEZD,EAAAA,EAAAA,KAAA,SAAOa,QAAS,GAAGR,EAAQS,MAAMQ,IAAOrB,UAAU,mCAAkCC,SACjFmB,EAAON,UATFO,SAcV,EDdRE,SENqB1B,IAAkB,IAAjB,QAAEO,GAASP,EACjC,OACEE,EAAAA,EAAAA,KAAA,OAAAE,UACEU,EAAAA,EAAAA,MAAA,YAAAV,SAAA,EACEF,EAAAA,EAAAA,KAAA,UAAQC,UAAU,4BAA2BC,SAAEG,EAAQU,QACtDV,EAAQe,QAAQhB,KAAI,CAACiB,EAAQC,KAC5BV,EAAAA,EAAAA,MAAA,OAAeX,UAAU,oBAAmBC,SAAA,EAC1CF,EAAAA,EAAAA,KAAA,SACEc,GAAI,GAAGT,EAAQS,MAAMQ,IACrBL,KAAMZ,EAAQY,KACdR,KAAK,WACLc,MAAOF,EAAOE,MACdtB,UAAU,mEAEZD,EAAAA,EAAAA,KAAA,SAAOa,QAAS,GAAGR,EAAQS,MAAMQ,IAAOrB,UAAU,qBAAoBC,SACnEmB,EAAON,UATFO,SAcV,GFVGd,EAAsBC,GAC1BC,EAAeD,IAAS,I","sources":["components/gadgets/FormGadget.js","components/widgets/InputWidget.js","components/widgets/WidgetRegistry.js","components/widgets/RadioWidget.js","components/widgets/CheckboxWidget.js"],"sourcesContent":["import React from 'react';\nimport { getWidgetComponent } from '../widgets/WidgetRegistry';  // Import the widget registry\n\nconst FormGadget = ({ gadget }) => {\n  return (\n    <form className=\"space-y-4\">\n      {gadget.formElements.map((element, index) => {\n        const WidgetComponent = getWidgetComponent(element.type);\n        return WidgetComponent ? (\n          <div key={index}>\n            <WidgetComponent element={element} />\n          </div>\n        ) : null;\n      })}\n    </form>\n  );\n};\n\nexport default FormGadget;\n","import React from 'react';\n\nconst InputWidget = ({ element }) => {\n  return (\n    <div>\n      <label htmlFor={element.id} className=\"block mb-2 text-sm font-medium\">\n        {element.label}\n      </label>\n      <input\n        type={element.inputType || 'text'}\n        id={element.id}\n        name={element.name}\n        class=\"peer w-full border-b border-gray-400 bg-inherit text-gray-800 placeholder-transparent focus:border-blue-500 focus:outline-none\"\n  />\n    </div>\n  );\n};\n\nexport default InputWidget;\n","import InputWidget from './InputWidget';\nimport RadioWidget from './RadioWidget';\nimport CheckboxWidget from './CheckboxWidget';\n\n// This registry maps element types to their corresponding widget components\nconst WidgetRegistry = {\n  input: InputWidget,\n  radio: RadioWidget,\n  checkbox: CheckboxWidget,\n};\n\n// Utility function to get the widget component by type\nexport const getWidgetComponent = (type) => {\n  return WidgetRegistry[type] || null;\n};\n","import React from 'react';\n\nconst RadioWidget = ({ element }) => {\n  return (\n    <div>\n      <fieldset>\n        <legend className=\"block text-sm font-medium text-gray-700\">{element.label}</legend>\n        {element.options.map((option, idx) => (\n          <div key={idx} className=\"flex items-center\">\n            <input\n              id={`${element.id}-${idx}`}\n              name={element.name}\n              type=\"radio\"\n              value={option.value}\n              className=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300\"\n            />\n            <label htmlFor={`${element.id}-${idx}`} className=\"ml-2 block text-sm text-gray-900\">\n              {option.label}\n            </label>\n          </div>\n        ))}\n      </fieldset>\n    </div>\n  );\n};\n\nexport default RadioWidget;\n","import React from 'react';\n\nconst CheckboxWidget = ({ element }) => {\n  return (\n    <div>\n      <fieldset>\n        <legend className=\"block text-sm font-medium\">{element.label}</legend>\n        {element.options.map((option, idx) => (\n          <div key={idx} className=\"flex items-center\">\n            <input\n              id={`${element.id}-${idx}`}\n              name={element.name}\n              type=\"checkbox\"\n              value={option.value}\n              className=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300\"\n            />\n            <label htmlFor={`${element.id}-${idx}`} className=\"ml-2 block text-sm\">\n              {option.label}\n            </label>\n          </div>\n        ))}\n      </fieldset>\n    </div>\n  );\n};\n\nexport default CheckboxWidget;\n"],"names":["_ref","gadget","_jsx","className","children","formElements","map","element","index","WidgetComponent","getWidgetComponent","type","WidgetRegistry","input","_jsxs","htmlFor","id","label","inputType","name","class","radio","options","option","idx","value","checkbox"],"sourceRoot":""}