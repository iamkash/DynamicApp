{"version":3,"file":"static/js/404.df7257d3.chunk.js","mappings":"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","sources":["components/gadgets/FormDocumentGadget.js","components/widgets/InputWidget.js","components/widgets/WidgetRegistry.js","components/widgets/RadioWidget.js","components/widgets/CheckboxWidget.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { getWidgetComponent } from '../widgets/WidgetRegistry';\nimport * as FaIcons from 'react-icons/fa';\n\nconst FormDocumentGadget = ({ gadget }) => {\n  const { sections = [], footer = { buttons: [] } } = gadget.gadgetOptions || gadget;\n\n  const sectionRefs = useRef({});\n  const [activeSection, setActiveSection] = useState(sections[0]?.sectionId);\n  const iconColors = ['bg-red-500', 'bg-blue-500', 'bg-green-500', 'bg-yellow-500', 'bg-purple-500'];\n\n  const scrollToSection = (sectionId) => {\n    setActiveSection(sectionId);\n  };\n\n  const handleButtonAction = (action) => {\n    console.log(`${action} action triggered`);\n  };\n\n  return (\n    <div className=\" gap-2 form-gadget flex flex-col\" style={{ height: 'calc(100vh - 100px)' }}>\n      {/* Main content area excluding footer */}\n      <div className=\"gap-2 flex flex-grow overflow-hidden\">\n        {/* Left Navigation Panel */}\n        <nav className=\"left-nav-panel w-1/4 p-4 border-r text-sm flex flex-col overflow-y-auto\" style={{ backgroundColor: 'var(--tertiaryBackground)', borderColor: 'var(--secondaryBackground)', color: 'var(--primaryTextColor)' }}>\n          <ul className=\" mb-6\">\n            {sections.map((section, index) => {\n              const IconComponent = FaIcons[section.icon] || FaIcons.FaFolder;\n              const iconColorClass = iconColors[index % iconColors.length];\n\n              return (\n                <div key={section.sectionId}>\n                  <li\n                    className={` text-xs flex items-center justify-between py-2 px-2 hover:bg-gray-100 cursor-pointer ${activeSection === section.sectionId ? 'bg-gray-800' : ''}`}\n                    onClick={() => scrollToSection(section.sectionId)}\n                    style={{\n                      backgroundColor: activeSection === section.sectionId ? 'var(--secondaryBackground)' : 'transparent',\n                      color: 'var(--primaryTextColor)',\n                    }}\n                  >\n                    <div className=\"flex items-center\">\n                      <div className={`w-8 h-8 flex items-center justify-center rounded-full ${iconColorClass} text-white mr-3`}>\n                        <IconComponent className=\"text-sm\" />\n                      </div>\n                      <span>{section.title}</span>\n                    </div>\n                    {section.count !== undefined && (\n                      <span className=\"border px-2 py-1 rounded-md\" style={{ borderColor: 'var(--secondaryBackground)', color: 'var(--secondaryTextColor)' }}>\n                        {section.count}\n                      </span>\n                    )}\n                  </li>\n                  {index < sections.length - 1 && <hr className=\"my-2\" style={{ borderColor: 'var(--secondaryBackground)' }} />}\n                </div>\n              );\n            })}\n          </ul>\n        </nav>\n\n        {/* Main Form Content Area */}\n        <div className=\" p-2 w-3/4 flex flex-col overflow-y-auto\" style={{ backgroundColor: 'var(--tertiaryBackground)', borderColor: 'var(--secondaryBackground)', color: 'var(--primaryTextColor)' }}>\n          {sections.map((section) => (\n            <div\n              key={section.sectionId}\n              ref={(el) => (sectionRefs.current[section.sectionId] = el)}\n              className={`${activeSection === section.sectionId ? 'block' : 'hidden'} w-full p-2`}\n            >\n              <div>\n                <h2 className=\"text-xs font-bold mb-2\">{section.title}</h2>\n                {Array.isArray(section.groups) && section.groups.map((group) => (\n                  <div key={group.groupId} className=\"mb-2 space-y-2\">\n                    {Array.isArray(group.fields) && group.fields.map((field, index) => {\n                      const WidgetComponent = getWidgetComponent(field.type);\n                      return WidgetComponent ? (\n                        <div key={index}>\n                          <WidgetComponent element={field} />\n                        </div>\n                      ) : null;\n                    })}\n                  </div>\n                ))}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Footer that spans across both nav and content */}\n      <div className=\"footer w-full p-2 border-t flex justify-end space-x-2\" style={{ backgroundColor: 'var(--tertiaryBackground)', borderColor: 'var(--secondaryBackground)' }}>\n        {footer.buttons.map((button, index) => (\n          <button\n            key={index}\n            type=\"button\"\n            className={`btn ${button.action === 'save' ? 'bg-blue-500' : 'bg-gray-300'} text-white px-4 py-2 rounded`}\n            onClick={() => handleButtonAction(button.action)}\n          >\n            {button.label}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default FormDocumentGadget;\n","import React from 'react';\n\nconst InputWidget = ({ element }) => {\n  return (\n    <div>\n      <label htmlFor={element.id} className=\"block mb-2 text-sm font-medium\">\n        {element.label}\n      </label>\n      <input\n        type={element.inputType || 'text'}\n        id={element.id}\n        name={element.name}\n        class=\"peer w-full border-b border-gray-400 bg-inherit text-gray-800 placeholder-transparent focus:border-blue-500 focus:outline-none\"\n  />\n    </div>\n  );\n};\n\nexport default InputWidget;\n","import InputWidget from './InputWidget';\nimport RadioWidget from './RadioWidget';\nimport CheckboxWidget from './CheckboxWidget';\n\n// This registry maps element types to their corresponding widget components\nconst WidgetRegistry = {\n  input: InputWidget,\n  radio: RadioWidget,\n  checkbox: CheckboxWidget,\n};\n\n// Utility function to get the widget component by type\nexport const getWidgetComponent = (type) => {\n  return WidgetRegistry[type] || null;\n};\n","import React from 'react';\n\nconst RadioWidget = ({ element }) => {\n  return (\n    <div>\n      <fieldset>\n        <legend className=\"block text-sm font-medium text-gray-700\">{element.label}</legend>\n        {element.options.map((option, idx) => (\n          <div key={idx} className=\"flex items-center\">\n            <input\n              id={`${element.id}-${idx}`}\n              name={element.name}\n              type=\"radio\"\n              value={option.value}\n              className=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300\"\n            />\n            <label htmlFor={`${element.id}-${idx}`} className=\"ml-2 block text-sm text-gray-900\">\n              {option.label}\n            </label>\n          </div>\n        ))}\n      </fieldset>\n    </div>\n  );\n};\n\nexport default RadioWidget;\n","import React from 'react';\n\nconst CheckboxWidget = ({ element }) => {\n  return (\n    <div>\n      <fieldset>\n        <legend className=\"block text-sm font-medium\">{element.label}</legend>\n        {element.options.map((option, idx) => (\n          <div key={idx} className=\"flex items-center\">\n            <input\n              id={`${element.id}-${idx}`}\n              name={element.name}\n              type=\"checkbox\"\n              value={option.value}\n              className=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300\"\n            />\n            <label htmlFor={`${element.id}-${idx}`} className=\"ml-2 block text-sm\">\n              {option.label}\n            </label>\n          </div>\n        ))}\n      </fieldset>\n    </div>\n  );\n};\n\nexport default CheckboxWidget;\n"],"names":["_ref","_sections$","gadget","sections","footer","buttons","gadgetOptions","sectionRefs","useRef","activeSection","setActiveSection","useState","sectionId","iconColors","_jsxs","className","style","height","children","_jsx","backgroundColor","borderColor","color","map","section","index","IconComponent","FaIcons","icon","iconColorClass","length","onClick","scrollToSection","title","undefined","count","ref","el","current","Array","isArray","groups","group","fields","field","WidgetComponent","getWidgetComponent","type","element","groupId","button","action","handleButtonAction","console","log","label","WidgetRegistry","input","htmlFor","id","inputType","name","class","radio","options","option","idx","value","checkbox"],"sourceRoot":""}