{"version":3,"file":"static/js/125.301ff249.chunk.js","mappings":"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","sources":["components/gadgets/ProjectsGadget.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as FaIcons from 'react-icons/fa';\nimport { FaStar,FaCheckCircle, FaPlus, FaArchive, FaTrash, FaClone, FaShareAlt, FaCheck, FaCalendarAlt, FaClock, FaUser } from 'react-icons/fa';\n\n\n// Example of enhanced project data (10 projects)\nconst projectData = [\n    {\n      projectId: 'RE-001',\n      projectName: 'Reservoir Simulation Optimization',\n      projectDescription: 'Optimizing reservoir simulation models to improve oil recovery and performance predictions.',\n      projectOwner: 'John Doe',\n      createdOn: '2024-01-15',\n      lastModified: '2024-02-01',\n      status: 'Active', // Active, Completed, Archived\n      isFavorite: true,\n    },\n    {\n      projectId: 'RE-002',\n      projectName: 'Pressure Testing Analysis',\n      projectDescription: 'Analyzing pressure tests to evaluate reservoir permeability and wellbore integrity.',\n      projectOwner: 'Jane Smith',\n      createdOn: '2024-01-10',\n      lastModified: '2024-01-20',\n      status: 'Completed',\n      isFavorite: false,\n    },\n    {\n      projectId: 'RE-003',\n      projectName: 'Fluid Flow Modeling',\n      projectDescription: 'Modeling fluid flow through porous media using reservoir simulation software for enhanced oil recovery (EOR) strategies.',\n      projectOwner: 'John Doe',\n      createdOn: '2024-01-05',\n      lastModified: '2024-01-18',\n      status: 'Active',\n      isFavorite: true,\n    },\n    {\n      projectId: 'RE-004',\n      projectName: 'Fracture Mapping and Analysis',\n      projectDescription: 'Mapping and analyzing fractures in the reservoir to improve well placement and production efficiency.',\n      projectOwner: 'Alice Brown',\n      createdOn: '2024-01-03',\n      lastModified: '2024-01-12',\n      status: 'Archived',\n      isFavorite: false,\n    },\n    {\n      projectId: 'RE-005',\n      projectName: 'Reservoir Pressure Monitoring',\n      projectDescription: 'Monitoring and analyzing reservoir pressure data to optimize production rates and prevent reservoir damage.',\n      projectOwner: 'Jane Smith',\n      createdOn: '2024-01-20',\n      lastModified: '2024-01-25',\n      status: 'Active',\n      isFavorite: true,\n    },\n    {\n      projectId: 'RE-006',\n      projectName: 'Thermal Recovery Study',\n      projectDescription: 'Evaluating the effectiveness of thermal recovery techniques, such as steam injection, to increase oil extraction.',\n      projectOwner: 'John Doe',\n      createdOn: '2024-01-25',\n      lastModified: '2024-01-29',\n      status: 'Active',\n      isFavorite: false,\n    },\n    {\n      projectId: 'RE-007',\n      projectName: 'Waterflood Optimization',\n      projectDescription: 'Optimizing waterflooding operations to enhance oil recovery in mature reservoirs.',\n      projectOwner: 'Alice Brown',\n      createdOn: '2024-01-10',\n      lastModified: '2024-01-23',\n      status: 'Completed',\n      isFavorite: true,\n    },\n    {\n      projectId: 'RE-008',\n      projectName: 'PVT Analysis for Reservoir Fluids',\n      projectDescription: 'Conducting PVT (Pressure-Volume-Temperature) analysis of reservoir fluids to understand fluid behavior under different reservoir conditions.',\n      projectOwner: 'Jane Smith',\n      createdOn: '2024-01-28',\n      lastModified: '2024-02-02',\n      status: 'Active',\n      isFavorite: false,\n    },\n    {\n      projectId: 'RE-009',\n      projectName: 'Gas Injection Feasibility Study',\n      projectDescription: 'Assessing the feasibility of gas injection (CO2, N2) to maintain reservoir pressure and improve oil recovery.',\n      projectOwner: 'John Doe',\n      createdOn: '2024-01-12',\n      lastModified: '2024-01-25',\n      status: 'Archived',\n      isFavorite: false,\n    },\n    {\n      projectId: 'RE-010',\n      projectName: 'Reservoir Characterization and Mapping',\n      projectDescription: 'Developing detailed reservoir characterization and geological maps to optimize wellbore placement and predict production potential.',\n      projectOwner: 'Alice Brown',\n      createdOn: '2024-01-18',\n      lastModified: '2024-01-30',\n      status: 'Active',\n      isFavorite: true,\n    }\n  ];\n  \n\n// Search panel items\nconst searchPanelItems = [\n  { icon: 'FaFolder', name: 'All Projects' },\n  { icon: 'FaTasks', name: 'Active' },\n  { icon: 'FaStar', name: 'Favorites' },\n  { icon: 'FaProjectDiagram', name: 'My Projects' },\n  { icon: 'FaShareAlt', name: 'Shared' },\n  { icon: 'FaCheck', name: 'Completed' },\n  { icon: 'FaTasks', name: 'Archived' },\n];\n\nconst currentUser = 'John Doe'; // Simulating the current user\n\n\n\nconst ProjectsGadget = ({ resultsPanel }) => {\n  // State for filtering\n  const [selectedFilter, setSelectedFilter] = useState('All Projects');\n  const [searchText, setSearchText] = useState(''); // State to store the search text\n \n\n// Filter counts dynamically calculated based on project data and user status\nconst calculateCounts = (projects) => {\n    return {\n      allProjects: projects.length,\n      active: projects.filter(project => project.status === 'Active').length,\n      favorites: projects.filter(project => project.isFavorite).length,\n      myProjects: projects.filter(project => project.projectOwner === currentUser).length, // Only projects where the user is the owner\n      shared: projects.filter(project => project.projectOwner !== currentUser).length, // Projects not owned by the current user\n      completed: projects.filter(project => project.status === 'Completed').length,\n      archived: projects.filter(project => project.status === 'Archived').length,\n    };\n  };\n\n  const projectCounts = calculateCounts(projectData);\n\n// Handle search input and update state\nconst handleSearch = (event) => {\n    setSearchText(event.target.value.toLowerCase());\n  };\n\n  /// Filter the projects based on the selected filter and search input\nconst filterProjects = () => {\n    // First, filter based on the selected filter\n    let filtered = projectData;\n  \n    switch (selectedFilter) {\n      case 'Active':\n        filtered = filtered.filter((project) => project.status === 'Active');\n        break;\n      case 'Favorites':\n        filtered = filtered.filter((project) => project.isFavorite);\n        break;\n      case 'My Projects':\n        filtered = filtered.filter((project) => project.projectOwner === currentUser);\n        break;\n      case 'Shared':\n        filtered = filtered.filter((project) => project.projectOwner !== currentUser);\n        break;\n      case 'Completed':\n        filtered = filtered.filter((project) => project.status === 'Completed');\n        break;\n      case 'Archived':\n        filtered = filtered.filter((project) => project.status === 'Archived');\n        break;\n      default:\n        filtered = projectData;\n        break;\n    }\n\n\n    // Now, apply the search filter to the already filtered list\n    if (searchText) {\n      filtered = filtered.filter((project) =>\n        project.projectName.toLowerCase().includes(searchText.toLowerCase()) ||\n        project.projectDescription.toLowerCase().includes(searchText.toLowerCase()) ||\n        project.projectOwner.toLowerCase().includes(searchText.toLowerCase()) ||\n        project.createdOn.toLowerCase().includes(searchText.toLowerCase()) ||\n        project.lastModified.toLowerCase().includes(searchText.toLowerCase()) ||\n        project.status.toLowerCase().includes(searchText.toLowerCase())\n      );\n    }\n  \n    return filtered;\n  };\n  \n  const filteredProjects = filterProjects(); // Apply the combined filter\n  \n\n  const iconColors = [\n    'bg-red-500',\n    'bg-blue-500',\n    'bg-green-500',\n    'bg-yellow-500',\n    'bg-purple-500',\n    'bg-teal-500',\n    'bg-gray-500',\n  ];\n\n  return (\n<div className=\"projects-gadget flex h-[calc(100vh-105px)] p-2 gap-2\">\n  {/* Search Panel */}\n  <div\n    className=\"search-panel w-1/4 p-2 border-r text-sm flex flex-col justify-between\"\n    style={{ backgroundColor: 'var(--tertiaryBackground)', borderColor: 'var(--secondaryBackground)', color: 'var(--primaryTextColor)' }}\n  >\n    <div>\n      {/* Search Input Field in the Search Panel */}\n      <input\n        type=\"text\"\n        placeholder=\"Search...\"\n        className=\"w-full p-2 mb-4 border rounded-lg focus:outline-none focus:border-blue-500\"\n        value={searchText} // Bind the input's value to the searchText state\n        onChange={handleSearch} // Handle changes to update the searchText state\n        style={{ backgroundColor: 'var(--tertiaryBackground)', color: 'var(--primaryTextColor)', borderColor: 'var(--secondaryBackground)' }}\n      />\n\n      <ul className=\"mb-6\">\n        {searchPanelItems.map((item, index) => {\n          const IconComponent = FaIcons[item.icon];\n          const iconColorClass = iconColors[index % iconColors.length];\n\n          let count;\n          switch (item.name) {\n            case 'All Projects':\n              count = projectCounts.allProjects;\n              break;\n            case 'Active':\n              count = projectCounts.active;\n              break;\n            case 'Favorites':\n              count = projectCounts.favorites;\n              break;\n            case 'My Projects':\n              count = projectCounts.myProjects;\n              break;\n            case 'Shared':\n              count = projectCounts.shared;\n              break;\n            case 'Completed':\n              count = projectCounts.completed;\n              break;\n            case 'Archived':\n              count = projectCounts.archived;\n              break;\n            default:\n              count = 0;\n          }\n\n          return (\n            <div key={index}>\n              <li\n                className={`flex items-center text-xs justify-between py-2 px-2 hover:bg-gray-100 cursor-pointer ${\n                  selectedFilter === item.name ? 'bg-gray-800' : ''\n                }`}\n                onClick={() => setSelectedFilter(item.name)}\n                style={{ backgroundColor: selectedFilter === item.name ? 'var(--secondaryBackground)' : 'transparent', color: 'var(--primaryTextColor)' }}\n              >\n                <div className=\"flex items-center text-xs\">\n                  {IconComponent && (\n                    <div\n                      className={`w-8 h-8 flex items-center text-xs justify-center rounded-full ${iconColorClass} text-white mr-3`}\n                    >\n                      <IconComponent className=\"text-sm\" />\n                    </div>\n                  )}\n                  <span>{item.name}</span>\n                </div>\n                <span className=\"border px-2 py-1 rounded-md\" style={{ borderColor: 'var(--secondaryBackground)', color: 'var(--secondaryTextColor)' }}>\n                  {count}\n                </span>\n              </li>\n              {index < searchPanelItems.length - 1 && <hr className=\"my-2\" style={{ borderColor: 'var(--secondaryBackground)' }} />}\n            </div>\n          );\n        })}\n      </ul>\n    </div>\n\n    {/* Create New Project Button */}\n    <button className=\"flex items-center text-xs justify-center w-full py-2 px-4 bg-blue-500 text-white rounded hover:bg-blue-600\">\n      <FaPlus className=\"mr-2\" />\n      Create a New Project\n    </button>\n  </div>\n\n  {/* Results Panel */}\n  <div\n    className=\"results-panel flex-1 p-2 text-sm\"\n    style={{ backgroundColor: 'var(--tertiaryBackground)', color: 'var(--primaryTextColor)' }}\n  >\n    {/* Toolbar Button Group */}\n    <div className=\"flex items-center text-xs justify-between mb-2\">\n      {/* New Project Button aligned to the left */}\n      <button className=\"flex items-center text-xs bg-blue-500 text-white px-2 py-1 rounded hover:bg-blue-600\">\n        <FaPlus className=\"mr-2\" /> New Project\n      </button>\n\n      {/* Button Group aligned to the right */}\n      <div className=\"button-group flex space-x-2\">\n        <button className=\"flex items-center text-xs bg-gray-500 text-white px-2 py-1 rounded hover:bg-gray-600\">\n          <FaArchive className=\"mr-2\" /> Archive\n        </button>\n        <button className=\"flex items-center text-xs bg-red-500 text-white px-2 py-1 rounded hover:bg-red-600\">\n          <FaTrash className=\"mr-2\" /> Delete\n        </button>\n        <button className=\"flex items-center text-xs bg-yellow-500 text-white px-2 py-1 rounded hover:bg-yellow-600\">\n          <FaClone className=\"mr-2\" /> Clone\n        </button>\n        <button className=\"flex items-center text-xs bg-green-500 text-white px-2 py-1 rounded hover:bg-green-600\">\n          <FaShareAlt className=\"mr-2\" /> Share\n        </button>\n        <button className=\"flex items-center text-xs bg-teal-500 text-white px-2 py-1 rounded hover:bg-teal-600\">\n          <FaCheck className=\"mr-2\" /> Complete\n        </button>\n      </div>\n    </div>\n\n    {/* Scrollable Results Panel */}\n    <div className=\"results-list overflow-y-auto h-[calc(100vh-190px)]\">\n      <ul>\n        {filteredProjects.map((task, index) => (\n          <li key={index} className=\"flex justify-between py-3 border-b\" style={{ borderColor: 'var(--secondaryBackground)' }}>\n            {/* Left side: Checkbox and project details */}\n            <div className=\"flex items-start\">\n              <input type=\"checkbox\" className=\"mr-4 mt-2\" /> {/* Align checkbox */}\n              <div className=\"flex flex-col\">\n                {/* Row 1: Project Name */}\n                <Link\n                  to={{\n                    pathname: `/project-home/`,\n                    state: { task }\n                  }}\n                  className=\"font-bold text-sm text-blue-500 hover:underline\"\n                >\n                  {task.projectName}\n                </Link>\n\n                {/* Row 2: Project Description */}\n                <span className=\"text-xs\" style={{ color: 'var(--secondaryTextColor)' }}>\n                  {task.projectDescription}\n                </span>\n\n                {/* Row 3: Project Owner, Created On, Last Modified */}\n                <div className=\"flex items-center text-xs text-xs mt-1\" style={{ color: 'var(--secondaryTextColor)' }}>\n                  <FaUser className=\"mr-1\" />\n                  <span>{task.projectOwner}</span>\n                  <FaCalendarAlt className=\"ml-3 mr-1\" />\n                  <span>{task.createdOn}</span>\n                  <FaClock className=\"ml-3 mr-1\" />\n                  <span>{task.lastModified}</span>\n                </div>\n              </div>\n            </div>\n\n            {/* Right side: Status, Owner, Favorite, Shared Icons */}\n            <div className=\"flex flex-col items-center space-y-2\">\n              {/* Status Icon */}\n              <div\n                className={`w-4 h-4 rounded-full flex items-center text-xs justify-center ${\n                  task.status === 'Active'\n                    ? 'bg-green-500'\n                    : task.status === 'Completed'\n                    ? 'bg-blue-500'\n                    : 'bg-gray-400'\n                }`}\n              >\n                {task.status === 'Active' ? (\n                  <FaCheckCircle className=\"text-white\" />\n                ) : task.status === 'Completed' ? (\n                  <FaCheckCircle className=\"text-white\" />\n                ) : (\n                  <FaArchive className=\"text-white\" />\n                )}\n              </div>\n\n              {/* Owner Icon */}\n              <div\n                className={`w-4 h-4 rounded-full flex items-center text-xs justify-center ${\n                  task.projectOwner === currentUser ? 'bg-blue-500' : 'bg-gray-300'\n                }`}\n              >\n                <FaUser className=\"text-white\" />\n              </div>\n\n              {/* Favorite Icon */}\n              <div\n                className={`w-4 h-4 rounded-full flex items-center text-xs justify-center ${\n                  task.isFavorite ? 'bg-yellow-500' : 'bg-gray-300'\n                }`}\n              >\n                <FaStar className=\"text-white\" />\n              </div>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  </div>\n</div>\n\n  \n  );\n};\n\nexport default ProjectsGadget;\n"],"names":["projectData","projectId","projectName","projectDescription","projectOwner","createdOn","lastModified","status","isFavorite","searchPanelItems","icon","name","currentUser","_ref","resultsPanel","selectedFilter","setSelectedFilter","useState","searchText","setSearchText","projectCounts","allProjects","projects","length","active","filter","project","favorites","myProjects","shared","completed","archived","filteredProjects","filterProjects","filtered","toLowerCase","includes","iconColors","_jsxs","className","children","style","backgroundColor","borderColor","color","_jsx","type","placeholder","value","onChange","event","target","map","item","index","IconComponent","FaIcons","iconColorClass","count","onClick","FaPlus","FaArchive","FaTrash","FaClone","FaShareAlt","FaCheck","task","Link","to","pathname","state","FaUser","FaCalendarAlt","FaClock","FaCheckCircle","FaStar"],"sourceRoot":""}