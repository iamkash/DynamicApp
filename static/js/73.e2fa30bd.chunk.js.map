{"version":3,"file":"static/js/73.e2fa30bd.chunk.js","mappings":"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","sources":["components/gadgets/FormGadget.js","components/widgets/CheckboxWidget.js","components/widgets/ChipWidget.js","components/widgets/ComboboxWidget.js","components/widgets/DropdownWidget.js","components/widgets/InputWidget.js","components/widgets/MaskInputWidget.js","components/widgets/DateTimeInputWidget.js","components/widgets/RadioGroupWidget.js","components/widgets/RatingWidget.js","components/widgets/SwitchWidget.js","components/widgets/TextAreaWidget.js","components/widgets/NumericInputWidget.js","components/widgets/TextInputWidget.js","components/widgets/WidgetRegistry.js"],"sourcesContent":["import React from 'react';\nimport { getWidgetComponent } from '../widgets/WidgetRegistry';  // Import the widget registry\n\nconst FormGadget = ({ gadget }) => {\n  return (\n    <form className=\"space-y-4\">\n      {gadget.fields.map((element, index) => {\n        const WidgetComponent = getWidgetComponent(element.type);\n        return WidgetComponent ? (\n          <div key={index}>\n            <WidgetComponent {...element} />  {/* Spread the properties of element */}\n          </div>\n        ) : null;\n      })}\n    </form>\n  );\n};\n\nexport default FormGadget;\n","// Checkbox.js\nimport { IgrCheckbox } from 'igniteui-react';\n\nconst Checkbox = ({ label, name, required, checked, onChange, width }) => (\n  <div className={`flex items-center ${width || 'w-full'} p-2`}>\n    <IgrCheckbox\n      checked={checked}\n      label={label}\n      onChange={(e) => onChange(e, name)}\n      required={required}\n    />\n  </div>\n);\n\nexport default Checkbox;\n","// Chip.js\nimport { IgrChip } from 'igniteui-react';\n\nconst ChipWidget = ({ label, color, onClick }) => (\n  <IgrChip\n    text={label}\n    style={{ backgroundColor: color || 'gray' }}\n    onClick={onClick}\n  />\n);\n\nexport default ChipWidget; \n","// ComboBoxWidget.js\nimport React, { useEffect } from 'react';\nimport { IgrCombo, IgrComboModule } from 'igniteui-react';\n\n// Ensure the module is registered\nIgrComboModule.register();\n\nconst ComboBoxWidget = ({\n  label,\n  name,\n  options = [],             // Use 'data' for the items\n  value,\n  onChange = () => {},    // Default to an empty function\n  required,\n  width,\n  placeholder = \"\",\n  singleSelect = true\n}) => {\n\n  useEffect(() => {\n    console.log(\"Data loaded:\", options); // Debugging to verify data structure\n  }, [options]);\n\n  return (\n    <div className={`flex flex-col ${width || 'w-full'}`}>\n      <IgrCombo\n        data={options}                           // Use 'data' as specified\n        displayKey=\"label\"                    // Use 'displayKey' for display text\n        valueKey=\"value\"                      // Use 'valueKey' for the value\n        selectedItems={[value]}               // Set the initial selected item\n        onSelectionChanging={(e) => {\n          const selectedValue = e.newSelection[0]?.value || null;\n          onChange(selectedValue, name);      // Trigger onChange with selected value\n        }}\n        placeholder={placeholder}\n        label={label}\n        required={required}\n        singleSelect ={singleSelect}\n        \n      />\n    </div>\n  );\n};\n\nexport default ComboBoxWidget;\n","// Dropdown.js\nimport { IgrDropdown } from 'igniteui-react';\n\nconst DropdownWidget = ({ label, name, required, options, value, onChange, width }) => (\n  <div className={`flex flex-col ${width || 'w-full'} p-2`}>\n    <label className=\"text-sm text-gray-600 mb-1\">{label}</label>\n    <IgrDropdown\n      value={value}\n      onSelectionChanged={(e) => onChange(e, name)}\n      dataSource={options}\n      required={required}\n    />\n    {required && !value && <span className=\"text-red-500 mt-1\">Required</span>}\n  </div>\n);\n\nexport default DropdownWidget;\n","import React from 'react';\n\nconst InputWidget = ({ element }) => {\n  return (\n    <div>\n      <label htmlFor={element.id} className=\"block mb-2 text-sm font-medium\">\n        {element.label}\n      </label>\n      <input\n        type={element.inputType || 'text'}\n        id={element.id}\n        name={element.name}\n        class=\"peer w-full border-b border-gray-400 bg-inherit text-gray-800 placeholder-transparent focus:border-blue-500 focus:outline-none\"\n  />\n    </div>\n  );\n};\n\nexport default InputWidget;\n","// MaskInput.js\nimport { IgrMaskInput } from 'igniteui-react';\n\nconst MaskInputWidget = ({ label, name, mask, required, value, onChange, width }) => (\n  <div className={`flex flex-col ${width || 'w-full'}`}>\n   \n    <IgrMaskInput\n      mask={mask}\n      value={value}\n      onValueChanged={(e) => onChange(e, name)}\n      required={required}\n      label={label}\n      \n    />\n  </div>\n);\n\nexport default MaskInputWidget;\n","// DateTimeInput.js\nimport { IgrDateTimeInput } from 'igniteui-react';\n\nconst DateTimeInputWidget = ({ label, name, required, value, onChange = () => {}, width }) => (\n  <div className={`flex flex-col ${width || 'w-full'} `}>\n   \n    <IgrDateTimeInput\n      value={value}\n      onValueChanged={(e) => onChange(e, name)}\n      required={required}\n      label={label}\n    />\n  </div>\n);\n\nexport default DateTimeInputWidget;\n","// RadioWidget.js\nimport React from 'react';\nimport { IgrRadioGroup, IgrRadio, IgrRadioModule, IgrRadioGroupModule } from 'igniteui-react';\n\n// Ensure Ignite UI modules are registered\nIgrRadioModule.register();\nIgrRadioGroupModule.register();\n\nconst RadioWidget = ({ name, options = [], selectedValue, alignment = \"horizontal\", onChange }) => {\n  return (\n    <IgrRadioGroup alignment={alignment}>\n      {options.map((option, index) => (\n        <IgrRadio\n          key={index}\n          name={name}\n          value={option.value}\n          checked={selectedValue === option.value}\n          onChange={(e) => onChange(e.target.value)}\n        >\n          <span>{option.label}</span>\n        </IgrRadio>\n      ))}\n    </IgrRadioGroup>\n  );\n};\n\nexport default RadioWidget;\n","// Rating.js\nimport { IgrRating } from 'igniteui-react';\n\nconst RatingWidget = ({ label, name, value, max, onChange, width }) => (\n  <div className={`flex flex-col ${width || 'w-full'} p-2`}>\n    <label className=\"text-sm text-gray-600 mb-1\">{label}</label>\n    <IgrRating\n      value={value}\n      max={max || 5}\n      onValueChanged={(e) => onChange(e, name)}\n    />\n  </div>\n);\n\nexport default RatingWidget;\n","// Switch.js\nimport { IgrSwitch } from 'igniteui-react';\n\nconst SwitchWidget = ({ label, name, checked, onChange, width }) => (\n  <div className={`flex items-center ${width || 'w-full'} p-2`}>\n    <label className=\"text-sm text-gray-600 mr-4\">{label}</label>\n    <IgrSwitch checked={checked} onCheckedChanged={(e) => onChange(e, name)} />\n  </div>\n);\n\nexport default SwitchWidget;\n","// TextareaWidget.js\nimport React from 'react';\nimport { IgrTextarea, IgrTextareaModule } from 'igniteui-react';\n\n// Ensure the Textarea module is registered\nIgrTextareaModule.register();\n\nconst TextAreaWidget = ({ label,\n  name,\n  \n  required = false,\n  minLength = 0,\n  maxLength = Infinity,\n  value = \"\",\n  onChange = () => {},  // Set a default function for onChange\n  width,\nrows = \"3\" }) => {\n  return (\n    <IgrTextarea\n      name={name}\n      value={value}\n      required={required}\n      rows={rows}\n      onInput={(e) => onChange(e.target.value)}\n      label={label}\n    />\n  );\n};\n\nexport default TextAreaWidget;\n","// NumericInputWidget.js\nimport { IgrInput } from 'igniteui-react';\n\nconst NumericInputWidget = ({ label, name, value, min, max, suffix, required, onChange = () => {}, width }) => (\n  <div className={`flex flex-col ${width || 'w-full'}`}>\n      <IgrInput\n        type=\"number\"\n        value={value}\n        min={min}\n        max={max}\n        required={required}\n        onInput={(e) => onChange(e.target.value, name)}\n        label={label}\n        suffix={suffix}>\n          <span slot=\"suffix\">{suffix}</span>\n        </IgrInput>\n       \n\n      \n   \n    \n  </div>\n);\n\nexport default NumericInputWidget;\n","// TextInputWidget.js\nimport { IgrInput, IgrInputModule } from 'igniteui-react';\n\n\nIgrInputModule.register();\n\nconst TextInputWidget = ({\n  label,\n  name,\n  inputType = \"text\",\n  required = false,\n  minLength = 0,\n  maxLength = Infinity,\n  value = \"\",\n  placeholder = \"\",\n  onChange = () => {},  // Set a default function for onChange\n  width,\n}) => (\n  <div className={`flex flex-col ${width || 'w-full'}`}>\n    <IgrInput\n      type={inputType}\n      label={label}\n      value={value}\n      required={required}\n      minLength={minLength}\n      maxLength={maxLength}\n      placeholder={placeholder}\n      onInput={(e) => onChange(e.target.value, name)}  // Ensure onChange is defined\n      style={{ border: 'none' }}\n    />\n  </div>\n);\n\nexport default TextInputWidget;\n","// WidgetRegistry.js\n\nimport CheckboxWidget from './CheckboxWidget';\nimport ChipWidget from './ChipWidget';\nimport ComboboxWidget from './ComboboxWidget';\nimport DropdownWidget from './DropdownWidget';\nimport InputWidget from './InputWidget';\nimport MaskInputWidget from './MaskInputWidget';\nimport DateTimeInputWidget from './DateTimeInputWidget';\nimport RadioGroupWidget from './RadioGroupWidget';\nimport RatingWidget from './RatingWidget';\nimport SwitchWidget from './SwitchWidget';\nimport TextAreaWidget from './TextAreaWidget';\nimport SelectWidget from './SelectWidget';\nimport NumericInputWidget from './NumericInputWidget';\nimport TextInputWidget from './TextInputWidget';\n\n// This registry maps element types to their corresponding widget components\nconst WidgetRegistry = {\n  checkbox: CheckboxWidget,\n  chip: ChipWidget,\n  comboBox: ComboboxWidget,\n  dropdown: DropdownWidget,\n  input: InputWidget,\n  maskInput: MaskInputWidget,\n  dateTimeInput: DateTimeInputWidget,\n  radioGroup: RadioGroupWidget,\n  rating: RatingWidget,\n  switch: SwitchWidget,\n  textArea: TextAreaWidget,\n  numeric: NumericInputWidget,\n  textInput: TextInputWidget,\n};\n\n// Utility function to get the widget component by type\nexport const getWidgetComponent = (type) => {\n  return WidgetRegistry[type] || null;\n};\n\nexport default WidgetRegistry;\n"],"names":["_ref","gadget","_jsx","className","children","fields","map","element","index","WidgetComponent","getWidgetComponent","type","_jsxs","label","name","required","checked","onChange","width","IgrCheckbox","e","color","onClick","IgrChip","text","style","backgroundColor","IgrComboModule","register","options","value","placeholder","singleSelect","useEffect","console","log","IgrCombo","data","displayKey","valueKey","selectedItems","onSelectionChanging","_e$newSelection$","selectedValue","newSelection","IgrDropdown","onSelectionChanged","dataSource","htmlFor","id","inputType","class","mask","IgrMaskInput","onValueChanged","IgrDateTimeInput","IgrRadioModule","IgrRadioGroupModule","alignment","IgrRadioGroup","option","IgrRadio","target","max","IgrRating","IgrSwitch","onCheckedChanged","IgrTextareaModule","minLength","maxLength","Infinity","rows","IgrTextarea","onInput","min","suffix","IgrInput","slot","IgrInputModule","WidgetRegistry","checkbox","CheckboxWidget","chip","ChipWidget","comboBox","ComboboxWidget","dropdown","DropdownWidget","input","InputWidget","maskInput","MaskInputWidget","dateTimeInput","DateTimeInputWidget","radioGroup","RadioGroupWidget","rating","RatingWidget","switch","SwitchWidget","textArea","TextAreaWidget","numeric","NumericInputWidget","textInput","border"],"sourceRoot":""}